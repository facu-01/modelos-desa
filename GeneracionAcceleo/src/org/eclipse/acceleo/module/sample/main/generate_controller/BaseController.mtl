[comment encoding = UTF-8 /]
[module BaseController('http://www.example.org/diagramaClasesCompleto')/]

[template public baseController()]
	
[file ('src/main/java/com/example/controllers/BaseController.java', false, 'UTF-8')]
package com.example.api.controllers;

import java.io.Serializable;

import org.springframework.data.domain.Pageable;
import org.springframework.http.ResponseEntity;
import org.springframework.web.bind.annotation.PathVariable;
import org.springframework.web.bind.annotation.RequestBody;

import com.example.api.entities.Base;

public interface BaseController <E extends Base,ID extends Serializable> {

	public ResponseEntity<?> getAll();
	public ResponseEntity<?> getAll(Pageable pageable);
	public ResponseEntity<?> getOne(@PathVariable ID id);
	public ResponseEntity<?> save(@RequestBody E entity);
	public ResponseEntity<?> update(@PathVariable ID id, @RequestBody E entity);
	public ResponseEntity<?> delete(@PathVariable ID id);
	
}
[/file]
[file ('src/main/java/com/example/controllers/BaseControllerImpl.java', false, 'UTF-8')]
package com.example.api.controllers;

import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.data.domain.Pageable;
import org.springframework.http.HttpStatus;
import org.springframework.http.ResponseEntity;
import org.springframework.web.bind.annotation.DeleteMapping;
import org.springframework.web.bind.annotation.GetMapping;
import org.springframework.web.bind.annotation.PathVariable;
import org.springframework.web.bind.annotation.PostMapping;
import org.springframework.web.bind.annotation.PutMapping;
import org.springframework.web.bind.annotation.RequestBody;

import com.example.api.entities.Base;
import com.example.api.services.BaseServiceImpl;

public abstract class BaseControllerImpl<E extends Base, S extends BaseServiceImpl<E, Long>> implements BaseController<E, Long>{

	@Autowired
	protected S servicio;
	
	@GetMapping("")
	public ResponseEntity<?> getAll(){
		try {

			return ResponseEntity.status(HttpStatus.OK).body(servicio.findAll());

		} catch(Exception e) {
			
			return ResponseEntity.status(HttpStatus.NOT_FOUND).body("{\"error\":\"Error. Por favor intente más tarde.\"}");
			
		}
	}
	
	@GetMapping("/paged")
	public ResponseEntity<?> getAll(Pageable pageable){
		try {

			return ResponseEntity.status(HttpStatus.OK).body(servicio.findAll(pageable));

		} catch(Exception e) {
			
			return ResponseEntity.status(HttpStatus.NOT_FOUND).body("{\"error\":\"Error. Por favor intente más tarde.\"}");
			
		}
	}
	
	@GetMapping("/{id}")
	public ResponseEntity<?> getOne(@PathVariable Long id){
		try {

			return ResponseEntity.status(HttpStatus.OK).body(servicio.findById(id));

		} catch(Exception e) {
			
			return ResponseEntity.status(HttpStatus.NOT_FOUND).body("{\"error\":\"Error. Por favor intente más tarde.\"}");
			
		}
	}
	
	@PostMapping("")
	public ResponseEntity<?> save(@RequestBody E entity){
		try {

			return ResponseEntity.status(HttpStatus.OK).body(servicio.save(entity));

		} catch(Exception e) {
			
			return ResponseEntity.status(HttpStatus.BAD_REQUEST).body("{\"error\":\"Error. Por favor intente más tarde.\"}");
			
		}
	}
	
	@PutMapping("/{id}")
	public ResponseEntity<?> update(@PathVariable Long id, @RequestBody E entity){
		try {

			return ResponseEntity.status(HttpStatus.OK).body(servicio.update(id, entity));

		} catch(Exception e) {
			
			return ResponseEntity.status(HttpStatus.BAD_REQUEST).body("{\"error\":\"Error. Por favor intente más tarde.\"}");
			
		}
	}
	
	@DeleteMapping("/{id}")
	public ResponseEntity<?> delete(@PathVariable Long id){
		try {

			return ResponseEntity.status(HttpStatus.NO_CONTENT).body(servicio.delete(id));

		} catch(Exception e) {
			
			return ResponseEntity.status(HttpStatus.BAD_REQUEST).body("{\"error\":\"Error. Por favor intente más tarde.\"}");
			
		}
	}
	
}
[/file]
	
[/template]
